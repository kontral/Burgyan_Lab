#!/usr/bin/perl -w
use strict;
use Bio::SeqIO;
my $fasta_in = shift;
my @patman = @ARGV;
if ((!$fasta_in)||(!@patman)){
	print STDERR "$0: Please enter a <fasta file> and <patman files> generated by using stacked fasta as pattern and the inputed fasta as database\n";
	print STDERR "<Missing input file - exiting>\n";
	exit();
}
my %out_put;
my $seqio_object = Bio::SeqIO->new(-file => $fasta_in, '-format' => 'Fasta');
while (my $seq = $seqio_object->next_seq){
	my $id = $seq->id();
	$out_put{$id}=$id;
}
foreach my $file (@patman){
	open (INPUT, "$file") or die "Couldn't open input file\n";
	my %seen;
	while (<INPUT>){
		if ($_=~m/^(\S+)\s*.*\t(\w+)\((\S+)\)\t(\d+)\t(\d+)\t(\S+)\t(\d+)/){
			my $name = $1;
			my $start = $4;
			my $end = $5;
			my $sequence = $2;
			my $abundance = $3;
			my $orientation = $6;
			my $mismatch = $7;
			$sequence =~ tr/U/T/;
			$sequence =~ tr/a-z/A-Z/;
			chomp ($name, $start, $end, $abundance, $sequence);
			if (($orientation eq "+")|($mismatch == 0)){
				$seen{$name}+=$abundance;		
			}
		}
	}	
	foreach my $element (keys %out_put){
		if($seen{$element}){
			$out_put{$element} .= "\t $seen{$element}";
		}
		else{
			$out_put{$element} .= "\t 0";		
		}
	}
close INPUT;
}
foreach my $element (keys %out_put){
	print "$out_put{$element}\n";
}

# by Levente Kontra
